{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst startBtn = document.querySelector(\"button\");\nstartBtn.disabled = true;\n\nlet userSelectedDate;\n\n\nconst timeChange = time => {\n    const userSelectedDateString = userSelectedDate.join(\"\");\n    const currentUnixTime = Date.now();\n    const timeDifference = userSelectedDateString - currentUnixTime;\n    return timeDifference;\n};\n\n\nflatpickr(\"#datetime-picker\", {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates,) {\n        const unixTime = selectedDates[0].getTime();\n        userSelectedDate = [unixTime];\n        const difference = timeChange(unixTime);\n        console.log(difference);\n        \n        const validDate = date => {\n            return new Promise((resolve, reject) => {\n                if (date < 0) {\n                    reject(alert(\"Please choose a date in the future\"));\n                } else {\n                    resolve();\n                }\n            });\n        };\n        \n        validDate(difference)\n            .then(() => {\n                startBtn.disabled = false;\n            })\n            .catch(error => {\n                error;\n                startBtn.disabled = true;\n            });\n    },\n});\n\n\n\n\n// startBtn.addEventListener(\"click\", )\n\n\n// const input = document.querySelector(\"input\");\n\n\n\n\n// function convertMs(ms) {\n//   // Number of milliseconds per unit of time\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   // Remaining days\n//   const days = Math.floor(ms / day);\n//   // Remaining hours\n//   const hours = Math.floor((ms % day) / hour);\n//   // Remaining minutes\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   // Remaining seconds\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["startBtn","userSelectedDate","timeChange","time","userSelectedDateString","currentUnixTime","flatpickr","selectedDates","difference","date","resolve","reject","error"],"mappings":"oGAGA,MAAMA,EAAW,SAAS,cAAc,QAAQ,EAChDA,EAAS,SAAW,GAEpB,IAAIC,EAGJ,MAAMC,EAAaC,GAAQ,CACvB,MAAMC,EAAyBH,EAAiB,KAAK,EAAE,EACjDI,EAAkB,KAAK,MAE7B,OADuBD,EAAyBC,CAEpD,EAGAC,EAAU,mBAAoB,CAC1B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAgB,CAEpBN,EAAmB,CADFM,EAAc,CAAC,EAAE,QAAO,CACb,EAC5B,MAAMC,EAAaN,EAAmB,EACtC,QAAQ,IAAIM,CAAU,GAEJC,GACP,IAAI,QAAQ,CAACC,EAASC,IAAW,CAChCF,EAAO,EACPE,EAAO,MAAM,oCAAoC,CAAC,EAElDD,GAEpB,CAAa,GAGKF,CAAU,EACf,KAAK,IAAM,CACRR,EAAS,SAAW,EACpC,CAAa,EACA,MAAMY,GAAS,CAEZZ,EAAS,SAAW,EACpC,CAAa,CACR,CACL,CAAC"}